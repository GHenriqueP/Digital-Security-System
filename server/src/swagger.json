{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Digital Security System - OpenAPI 3.0",
    "description": "This API aims to register systems, being a CRUD that allows you to create new systems, edit systems and search for registered systems.",
    "contact": {
      "email": "ghguga123@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "API de teste"
    }
  ],
  "tags": [
    {
      "name": "Systems",
      "description": "Operations about systems"
    },
    {
      "name": "User",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/systems": {
      "get": {
        "tags": ["Systems"],
        "summary": "Returns systems",
        "description": "Returns all systems by default and specific systems when using filters by parameters.",
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "description": "String description of the system",
            "required": false
          },
          {
            "name": "acronym",
            "in": "query",
            "description": "String acronym of the system",
            "required": false
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email  of the system",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/System",
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Erro ao criar um novo sistema"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/system": {
      "post": {
        "tags": ["Systems"],
        "summary": "Create a new System",
        "description": "Returns all systems by default and specific systems when using filters by parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/System",
                "type": "object"
              },
              "examples": {
                "System": {
                  "value": {
                    "description": "Salesforce",
                    "acronym": "SFDC",
                    "email": "example@email.com",
                    "url": "",
                    "userId": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sistema alterado com sucesso" 
          },
          "400": {
            "description": "Descrição e sigla são obrigatórios" 
          },
          "401": {
            "description": "Descrição deve ter no máximo 100 caracteres e sigla no máximo 10 caracteres" 
          },
          "402": {
            "description": "E-mail de atendimento deve ter no máximo 100 caracteres" 
          },
          "403": {
            "description": "URL deve ter no máximo 50 caracteres" 
          },
          "404": {
            "description": "E-mail inválido" 
          },
          "500": {
            "description": "Erro ao alterar o sistema"
          }
        }
      }
    },
    "/systems/{id}": {
      "put": {
        "tags": ["Systems"],
        "summary": "Change an existing system",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "System ID that will be changed",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/System",
                "type": "object"
              },
              "examples": {
                "System": {
                  "value": {
                    "description": "Salesforce",
                    "acronym": "SFDC",
                    "email": "example@email.com",
                    "url": "https://www.salesforce.com/br/",
	                  "modJustify": "Estou alterando este sistema.",
	                  "isActive": false,
                    "userId": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation" 
          },
          "400": {
            "description": "Descrição e sigla são obrigatórios" 
          },
          "401": {
            "description": "Descrição deve ter no máximo 100 caracteres e sigla no máximo 10 caracteres" 
          },
          "402": {
            "description": "E-mail de atendimento deve ter no máximo 100 caracteres" 
          },
          "403": {
            "description": "URL deve ter no máximo 50 caracteres" 
          },
          "404": {
            "description": "E-mail inválido" 
          },
          "500": {
            "description": "Erro ao buscar sistemas"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get Users",
        "description": "",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
    "components": {
      "schemas": {
        "System": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            },
            "Description": {
              "type": "string",
              "example": "System Something"
            },
            "Acronym": {
              "type": "string",
              "example": "SS"
            },
            "email": {
              "type": "string",
              "example": "john@email.com"
            },
            "URL": {
              "type": "string",
              "example": "http://somethingurl.com/"
            },
            "modJustify": {
              "type": "string",
              "example": "I changed this system because are needed"
            },
            "isActive": {
              "type": "string",
              "example": "Ativo",
              "enum": ["Ativo", "Inativo"]
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "userId": {
              "type": "integer",
              "format": "int64",
              "example": 198772
            }
          },
          "json": {
            "name": "System"
          }
        }, 
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            },
            "username": {
              "type": "string",
              "example": "theUser"
            }
          },
          "json": {
            "name": "User"
          }
        }
      }
    }
  }
